// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id      String   @id
  email   String   @unique
  password String  @db.VarChar(60)
  role    Role?     @default(USER)
  createdAt DateTime @default(now())
  cart    cart?
  wishlist wishlist?
}

model category {
  id        String @id
  name      String @unique
  description String?
  imagePath String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  product[]
}

model product {
  id          String @id
  name        String @unique
  description String?
  price       Float
  imagePath   String?
  availability Availability
  offer       Float?
  featured    Boolean @default(false)
  bestSeller  Boolean @default(false)
  offered     Boolean @default(false)
  categoryId  String
  category    category @relation(fields: [categoryId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cartItems   cartItems[]
  wishlist    wishlist[]
}

model cart {
  id        String @id
  userId    String @unique
  user      User   @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cartItems cartItems[]
}

model cartItems {
  id        String @id
  cartId    String
  cart      cart   @relation(fields: [cartId], references: [id])
  productId String
  product   product @relation(fields: [productId], references: [id])
  quantity  Int @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model wishlist {
  id        String @id
  userId    String @unique
  user      User   @relation(fields: [userId], references: [id])
  productId String
  product   product @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Define an enum for availability
enum Availability {
  Available
  Unavailable
  Limited
}

enum Role {
  USER
  ADMIN
}

